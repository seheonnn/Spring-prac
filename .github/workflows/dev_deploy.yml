name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2 # (4).코드 check out (현재 디렉토리의 최상단, 즉 .github 디렉토리 이하의 level 을 기준으로) + 다른 레포지토리에서 코드를 가져올 수도 있음

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17 # (5).자바 설치
          distribution: 'adopt'

      - name: Convert to dev YML
        run: |
          cd ./src/main/resources
          [ -e "application.yml" ] && rm application.yml
          echo "spring:" > application.yml
          echo "  profiles:" >> application.yml
          echo "    active: dev" >> application.yml
          
          echo "  servlet:" >> application.yml
          echo "    multipart:" >> application.yml
          echo "      max-file-size: 200MB" >> application.yml
          echo "      max-request-size: 200MB" >> application.yml

      - name: Set dev.yml
        uses: microsoft/variable-substitution@v1
        with:
          files: ./src/main/resources/application-dev.yml
        env:
          spring.datasource.url: ${{ secrets.DB_URL }}
          spring.datasource.username: ${{ secrets.DB_USER }}
          spring.datasource.password: ${{ secrets.DB_PW }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash # (6).권한 부여

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash # (7).build시작

      - name: Login to Docker hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: seheon/beanstalk-docker:latest

      - name: Beanstalk Deploy
        uses: einaregilsson/beanstalk-deploy@v20
        with:
          aws_access_key: ${{ secrets.AWS_ACTION_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_ACTION_SECRET_ACCESS_KEY }}
          application_name: project-prod-study
          environment_name: Project-prod-study-env
          version_label: github-action-${{ steps.current-time.outputs.formattedTime }}
          region: ap-northeast-2
          deployment_package: deploy/Dockerrun.aws.json
          wait_for_deployment: false
